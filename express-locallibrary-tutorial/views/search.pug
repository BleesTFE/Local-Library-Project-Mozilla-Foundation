extends layout

block content
    h1(style='text-align: center; font-size: 24px; margin-top: 20px; color: #333;')= title
    form(method='POST' action='' enctype='multipart/form-data' id='forman' style='text-align: center;')
        input#search_input(
            type='text'
            name='search_input'
            placeholder='Type here to search'
            style='font-size: 16px; border: 1px solid #ccc; padding: 8px; width: 300px; color: #333;'
            class='search-input-animation'
            onfocus="this.classList.add('search-input-animation')"
            onblur="this.classList.remove('search-input-animation')"
        )
    p Books
    div#books-list(style='background-color: #b3e6cc; padding: 20px; border-radius: 10px; margin-top: 20px;')
    p Authors
    div#authors-list(style='background-color: #ffb366; padding: 20px; border-radius: 10px; margin-top: 20px;')
    style.
        /* style.css */
        .search-input-animation {
            transition: background-color 0.3s ease;
        }

        .search-input-animation:hover {
            background-color: #ffc947; /* Change to the desired hover color */
        }
    script.
        async function fetchBooksAndAuthors() {
            const response = await fetch('/catalog/search/api');
            if (!response.ok) {
                throw new Error(`Error fetching data: ${response.statusText}`);
            }
            console.log('API response' + response);
            const data = await response.json();
            return data;
        }

        function filter_books(array, query) {
            return array.filter(element => element.title.toLowerCase().includes(query.toLowerCase()));
        }

        function filter_authors(array, query) {
            return array.filter(element => element.name.toLowerCase().includes(query.toLowerCase()));
        }

        document.addEventListener('DOMContentLoaded', async () => {
            const search_bar = document.getElementById('search_input');
            let books_result = [];
            let authors_result = [];

            search_bar.addEventListener('input', async (event) => {
                const search_terms = event.target.value;
                clearTimeout(timeoutID);
                var timeoutID = setTimeout(async () => {
                    try {
                        // Fetch the latest books and authors data using the API
                        const { books, authors } = await fetchBooksAndAuthors();

                        // Update the filtered results based on the new data
                        books_result = filter_books(books, search_terms);
                        authors_result = filter_authors(authors, search_terms);

                        // Call a function to update the displayed results
                        updateResults(books_result, authors_result);
                    } catch (error) {
                        console.error('Error fetching or processing data:', error);
                    }
                }, 2000);
            });
            // Prevent form submission when Enter key is pressed
            search_bar.addEventListener('keydown', (event) => {
                if (event.keyCode === 13) {
                    event.preventDefault();
                }
            });
            function updateResults(books_result, authors_result) {
                const booksList = document.getElementById('books-list');
                const authorsList = document.getElementById('authors-list');

                // Clear previous results
                booksList.innerHTML = '';
                authorsList.innerHTML = '';

                // Update results
                books_result.forEach(book => {
                    const li = document.createElement('li');
                    const a = document.createElement('a');
                    a.href = book.url;
                    a.textContent = book.title;
                    li.appendChild(a);
                    booksList.appendChild(li);
                });

                authors_result.forEach(author => {
                    const li = document.createElement('li');
                    const a = document.createElement('a');
                    a.href = author.url;
                    a.textContent = author.name; // Assuming 'first_name' is the author's name property
                    li.appendChild(a);
                    authorsList.appendChild(li);
                });
            }
        });